buildscript {
	ext {
		flywayVersion = "6.5.7"
	}
}
plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id "org.flywaydb.flyway" version "6.5.7"

}

ext {
//	flywayVersion = '6.5.7'
//	mapstructVersion = '1.4.0.Beta1'
	jjwtVersion = '0.11.2'
//	mockitoVersion = '3.5.15'
}

group = 'com.hero'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'com.google.guava:guava:30.0-jre'

	implementation 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'org.flywaydb:flyway-core:6.5.7'

	compile 'org.mapstruct:mapstruct:1.4.0.Beta1'
	annotationProcessor "org.mapstruct:mapstruct-processor:1.4.0.Beta1"

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor "org.projectlombok:lombok"

	compile "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
	runtime "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
	runtime	"io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

	runtimeOnly 'org.springframework.boot:spring-boot-devtools'

	testImplementation "org.springframework.security:spring-security-test"
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}
